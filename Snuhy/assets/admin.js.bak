(function(){
  // نحتاج REST + nonce
  function ready(fn){ if(document.readyState!='loading'){ fn(); } else { document.addEventListener('DOMContentLoaded', fn); } }

  ready(function(){
    if (typeof SnuhyVars === 'undefined'){
      console.warn('SnuhyVars missing – admin.js loaded outside Snuhy pages?');
      return;
    }

    const api = SnuhyVars.rest || '/wp-json/snuhy/v1';
    const nonce = SnuhyVars.nonce || '';

    const el = (sel) => document.querySelector(sel);
    const tbody = el('#snuhy-links-tbody');
    const inpKeyword = el('#snuhy-keyword');
    const inpUrl     = el('#snuhy-url');
    const inpRel     = el('#snuhy-rel');
    const selType    = el('#snuhy-type');
    const btnSave    = el('#snuhy-save');
    const btnReset   = el('#snuhy-reset');

    function headersJSON(){
      return { 'Content-Type':'application/json', 'X-WP-Nonce': nonce };
    }

    function loadLinks(){
      if (!tbody) return;
      tbody.innerHTML = '<tr><td colspan="7">Loading...</td></tr>';
      fetch(api + '/links', { headers: { 'X-WP-Nonce': nonce } })
        .then(r => r.json())
        .then(rows => {
          if (!Array.isArray(rows) || !rows.length){
            tbody.innerHTML = '<tr><td colspan="7">No links yet.</td></tr>';
            return;
          }
          tbody.innerHTML = rows.map(r => {
            const esc = (s)=> String(s||'').replace(/</g,'&lt;').replace(/>/g,'&gt;');
            return `<tr>
              <td>${r.id||''}</td>
              <td>${esc(r.keyword)}</td>
              <td style="word-break:break-all">${esc(r.target_url)}</td>
              <td>${esc(r.type)}</td>
              <td>${esc(r.rel)}</td>
              <td>${r.enabled ? 'Yes':'No'}</td>
              <td>
                 <button class="button snuhy-del" data-id="${r.id}">Delete</button>
              </td>
            </tr>`;
          }).join('');
          bindDelete();
        })
        .catch(()=>{ tbody.innerHTML = '<tr><td colspan="7">Failed to load.</td></tr>'; });
    }

    function bindDelete(){
      document.querySelectorAll('.snuhy-del').forEach(btn=>{
        btn.addEventListener('click', function(){
          const id = this.getAttribute('data-id');
          if (!id) return;
          if (!confirm('Delete this link?')) return;
          fetch(api + '/links/' + id, {
            method: 'DELETE',
            headers: { 'X-WP-Nonce': nonce }
          })
            .then(r=>r.json())
            .then(()=>{
              loadLinks();
            });
        });
      });
    }

    if (btnSave){
      btnSave.addEventListener('click', function(e){
        e.preventDefault();
        const payload = {
          keyword:    (inpKeyword && inpKeyword.value || '').trim(),
          target_url: (inpUrl && inpUrl.value || '').trim(),
          rel:        (inpRel && inpRel.value || '').trim(),
          type:       (selType && selType.value || 'internal')
        };
        if (!payload.keyword || !payload.target_url){
          alert('Keyword and Target URL are required.');
          return;
        }
        fetch(api + '/links', {
          method: 'POST',
          headers: headersJSON(),
          body: JSON.stringify(payload)
        })
          .then(r=>r.json())
          .then(res=>{
            if (res && res.ok){
              if (inpKeyword) inpKeyword.value='';
              if (inpUrl)     inpUrl.value='';
              if (inpRel)     inpRel.value='';
              if (selType)    selType.value='internal';
              loadLinks();
            } else {
              alert('Save failed.');
            }
          })
          .catch(()=> alert('Save failed.'));
      });
    }

    if (btnReset){
      btnReset.addEventListener('click', function(e){
        e.preventDefault();
        if (inpKeyword) inpKeyword.value='';
        if (inpUrl)     inpUrl.value='';
        if (inpRel)     inpRel.value='';
        if (selType)    selType.value='internal';
      });
    }

    loadLinks();
  });
})();
